version: 2.1

orbs:
  k8s: circleci/kubernetes@0.11.0
  gcp-gcr: circleci/gcp-gcr@0.8.0
  gcp-gke: circleci/gcp-gke@1.1.0

commands:
  # A slightly modified version of rollout-image command from the official gcp-gke orb, the only difference is
  # it takes two additional parameters perform-login and install-kubectl.
  # Original: https://github.com/CircleCI-Public/gcp-gke-orb/blob/master/src/commands/rollout-image.yml
  rollout-image:
    parameters:
      install-kubectl:
        description: >
          Whether to install kubectl
        type: boolean
        default: false
      perform-login:
        description: >
          Whether to perform a login with the gcloud CLI.
        type: boolean
        default: false
      cluster:
        description: "The Kubernetes cluster name."
        type: string
      deployment:
        description: "The Kubernetes deployment name."
        type: string
      container:
        description: "The Kubernetes container name."
        type: string
      image:
        description: A fully-qualified name for your docker image
        type: string
      tag:
        description: Docker image tag
        type: string
        default: latest
      namespace:
        description: "The Kubernetes namespace name."
        type: string
        default: ""
      dry-run:
        default: none
        description: >
          Must be "none", "server", or "client". If client strategy, only print the object that would be sent,
          without sending it. If server strategy, submit server-side request without persisting the resource.
        type: enum
        enum: [ "none", "server", "client" ]
    steps:
      - gcp-gke/update-kubeconfig-with-credentials:
          cluster: <<parameters.cluster>>
          perform-login: <<parameters.perform-login>>
          install-kubectl: <<parameters.install-kubectl>>
      - run:
          name: Roll out image
          command: |
            DRY_RUN="<< parameters.dry-run >>"
            if [ -n "<<parameters.namespace>>" ]; then
              set -- "$@" --namespace="<<parameters.namespace>>"
            fi
            set -- "$@" "--dry-run=${DRY_RUN}"
            kubectl set image deployment <<parameters.deployment>> <<parameters.container>>=<<parameters.image>>:<<parameters.tag>> "$@"

jobs:
  build-artifact:
    docker:
      - image: cimg/base:2020.01
    resource_class: small
    steps:
      - checkout
      - run: git clone --depth 1 https://github.com/koseven/koseven.git --single-branch
      - run:
          name: Build dtapi
          command: |
            ARTIFACT="artifact"
            mkdir "$ARTIFACT"

            cp -r koseven/modules "$ARTIFACT"
            cp -r koseven/system "$ARTIFACT"
            cp koseven/public/index.php "$ARTIFACT"

            cp -r application "$ARTIFACT"
            cp .htaccess "$ARTIFACT"
            mkdir -p "$ARTIFACT/application/cache/"
            mkdir -p "$ARTIFACT/application/logs/"
            tar -czf dtapi_be_artifact.tar.gz -C "./$ARTIFACT" .
      - store_artifacts:
          path: dtapi_be_artifact.tar.gz
      - persist_to_workspace:
          root: .
          paths:
            - "artifact"
            - "docker"
  build-and-push-image:
    docker:
      - image: cimg/base:2020.01
    resource_class: small
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ~/project/
      - gcp-gcr/gcr-auth
      - gcp-gcr/build-image:
          dockerfile: "docker/Dockerfile"
          image: dtapi-be
          registry-url: eu.gcr.io
          tag: ${CIRCLE_SHA1:0:7}
      # Push and tag docker image according to commit SHA1 hash 
      - gcp-gcr/push-image:
          digest-path: /tmp/digest.txt
          image: dtapi-be
          registry-url: eu.gcr.io
          tag: ${CIRCLE_SHA1:0:7}
      # Tag pusshed image as latest
      - gcp-gcr/tag-image:
          image: dtapi-be
          registry-url: eu.gcr.io
          source-tag: ${CIRCLE_SHA1:0:7}
          target-tag: latest
      # The path to save the RepoDigest of the pushed image
      - run:
          name: sha256 Digest
          command: |
            echo "Digest is: $(</tmp/digest.txt)"

  deploy:
    docker:
      - image: cimg/base:2020.01
    resource_class: small
    steps:
      # Update a deployment Docker image.
      - rollout-image:
          cluster: $GCP_CLUSTER
          deployment: $GCP_K8_DEPLOYMENT
          container: $GCP_K8_CONTAINER
          image: eu.gcr.io/$GOOGLE_PROJECT_ID/dtapi-be
          tag: ${CIRCLE_SHA1:0:7}
          perform-login: true
          install-kubectl: true

workflows:
  build:
    jobs:
      # build and push every commit
      - build-artifact
      - build-and-push-image:
          context: dtapi
          requires:
            - build-artifact
      # Only deploy on the master branch
      - deploy:
          context: dtapi
          requires:
            - build-and-push-image
          filters:
            branches:
              only:
                - master
